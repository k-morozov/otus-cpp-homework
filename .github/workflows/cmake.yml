name: CMake

on:
  pull_request:
    branches: [ "feature/ip_filter" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  ip_filter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - run: pip install conan
      - run: conan profile new default --detect
      - run: conan profile update settings.compiler.libcxx=libstdc++11 default
      - run: conan install --build missing -if ${{github.workspace}}/build .
      - run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
      - run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
      - run: cmake --build ${{github.workspace}}/build --target test
      - run: python ip_filter/integration/hash_test.py
      - run: cmake --build ${{github.workspace}}/build --target package
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: ip_filter ${{ github.run_number }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{github.workspace}}/build/_CPack_Packages/Linux/DEB/ip_filter-0.0.1-Linux.deb
          asset_name: ip_filter-0.0.${{ github.run_number }}-Linux.deb
          asset_content_type: application/vnd.debian.binary-package
